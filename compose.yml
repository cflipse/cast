---
version: "3"

x-conditions:
  healthy: &healthy
    condition: service_healthy
  started: &started
    condition: service_started

x-cast-volumes: &castvolumes
  volumes:
    - .:/srv/cast

services:
  redis:
    image: redis
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
    volumes:
      - redis:/data

  cast:
    build:
      context: .
      target: development
      dockerfile: Dockerfile
    profiles:
      - cast
    command: "bin/rails server"
    depends_on:
      castdb: *healthy
    links:
      - castdb
      - vite
      - minio
    <<: *castvolumes
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6700"]
    ports:
      - 6700:6700
    environment:
      SPACES_ENDPOINT: http://minio:9000/
      SPACES_HOST: http://localhost:9002/casts/
      CASTS_DB: postgresql://bwoa:rikus@castdb:5432
      VITE_RUBY_HOST: vite

  castdb:
    image: postgres:13
    environment:
      POSTGRES_USER: bwoa
      POSTGRES_PASSWORD: rikus
      POSTGRES_DB: casts_development
    ports:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "bwoa", "-d", "casts_development"]
      interval: 10s
    volumes:
      - castdb:/var/lib/postgresql/data
      - ./db/dumps/casts.sql:/docker-entrypoint-initdb.d/init.sql

  vite:
    build:
      context: .
      target: development
      dockerfile: Dockerfile
    profiles:
      - cast
    <<: *castvolumes
    environment:
      GEM_HOME: /usr/local/castgems/
      GEM_PATH: /usr/local/castgems:/usr/local/bundle
      VITE_RUBY_HOST: 0.0.0.0
    command: bin/vite dev

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: ASDF123456
      MINIO_ROOT_PASSWORD: RANDOMHASH7899
      MINIO_VOLUMES: /data
    volumes:
      - minio:/data
      - ./certs:/root/certs
    command: server /data --console-address ":9001"
    ports:
      - 9002:9000
      - 9001

volumes:
  minio:
  castdb:
  redis:
